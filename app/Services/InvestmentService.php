<?php/** * Created by PhpStorm. * User: Administrator * Date: 2017/9/30 * Time: 16:35 */namespace App\Services;use App\Events\ThreeLevelEvent;use App\Models\AccountRecord;use App\Models\Config;use App\Models\Order;use App\Models\User;class InvestmentService{    protected $accountService;    public function __construct(AccountRecordService $recordService)    {        $this->accountService = $recordService;    }    public function investment(User $user, $total_money, $type = 1, $message = '')    {        $res = \DB::transaction(function () use ($user, $total_money, $type, $message) {//            $recordType = AccountRecord::TYPE_BALANCE;//            if ($type == Order::TYPE_BALANCE) {//                $recordType = AccountRecord::TYPE_BALANCE;////                $deMoney = $user->decrement('balance', $total_money);////            } elseif ($type == Order::TYPE_STATIC_INCOME) {//                $recordType = AccountRecord::TYPE_STATIC;////                $deMoney = $user->decrement('static_income', $->total_money);////            } elseif ($type == Order::TYPE_DYNAMIC_INCOME) {//                $recordType = AccountRecord::TYPE_DYNAMIC;////                $deMoney = $user->decrement('dynamic_income', $->total_money);////            } else {//                \Log::info('恶意复投');//                return false;//            }//                $record = $this->accountService->setAccountRecord($user->id, $total_money, $recordType, $message . '投资', 2);//                $record = $this->accountService->setAccountRecord($user->id, $total_money, AccountRecord::TYPE_INVESTMENT, $message . '投资', 2);            $config = Config::find(1)->value / 100;            $investment = $user->investment;            if (count($investment) == 0) {                $investment = $user->investment()->create([                    'money' => $total_money,                    'give_money' => $total_money * $config,                ]);                if (count($investment) > 0) {                    $record = $this->accountService->setAccountRecord($user->id, $investment->give_money, $type, '投资积分', 2, 2);                    $record = $this->accountService->setAccountRecord($user->id, $investment->give_money, AccountRecord::TYPE_INVESTMENT, '增值积分', 1, 2);                    if (count($record) > 0) {                        event(new ThreeLevelEvent(['user_id' => $user->id, 'money' => $total_money, 'level' => 1]));                        return true;                    } else {                        return false;                    }                } else {                    return false;                }            } else {                $investment->money += $total_money;                $investment->give_money += ($total_money * $config);                $res = $investment->save();                if ($res) {                    $record = $this->accountService->setAccountRecord($user->id, $total_money, $type, '投资积分', 2, 2);                    $record = $this->accountService->setAccountRecord($user->id, $total_money * $config, AccountRecord::TYPE_INVESTMENT, '增值积分', 1, 2);                    if (count($record) > 0) {                        event(new ThreeLevelEvent(['user_id' => $user->id, 'money' => $total_money, 'level' => 1]));                        return true;                    } else {                        return false;                    }                } else {                    return false;                }            }        });        if ($res)            return true;        return false;    }}