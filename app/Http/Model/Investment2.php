<?php/** * Created by PhpStorm. * User: Administrator * Date: 2017/10/24 * Time: 18:01 */namespace App\Http\Model;use DB;use Illuminate\Database\Eloquent\Model;use Illuminate\Database\Eloquent\SoftDeletes;class Investment2 extends Model{//    use SoftDeletes;    protected $table = 'investments2';    protected $fillable = ['money','give_money','order_id','status','user_id','give_allmoney','give_todaymoney'];    public function user()    {        return $this->belongsTo(User::class,'user_id');    }    public function order()    {        return $this->belongsTo(Order2::class,'order_id');    }    //批量更新    public function updateBatch($multipleData = [])    {        try {            if (empty($multipleData)) {                throw new \Exception("数据不能为空");            }            $tableName = DB::getTablePrefix() . $this->getTable(); // 表名            $firstRow  = current($multipleData);            $updateColumn = array_keys($firstRow);            // 默认以id为条件更新，如果没有ID则以第一个字段为条件            $referenceColumn = isset($firstRow['id']) ? 'id' : current($updateColumn);            unset($updateColumn[0]);            // 拼接sql语句            $updateSql = "UPDATE " . $tableName . " SET ";            $sets      = [];            $bindings  = [];            foreach ($updateColumn as $uColumn) {                $setSql = "`" . $uColumn . "` = CASE ";                foreach ($multipleData as $data) {                    $setSql .= "WHEN `" . $referenceColumn . "` = ? THEN ? ";                    $bindings[] = $data[$referenceColumn];                    $bindings[] = $data[$uColumn];                }                $setSql .= "ELSE `" . $uColumn . "` END ";                $sets[] = $setSql;            }            $updateSql .= implode(', ', $sets);            $whereIn   = collect($multipleData)->pluck($referenceColumn)->values()->all();            $bindings  = array_merge($bindings, $whereIn);            $whereIn   = rtrim(str_repeat('?,', count($whereIn)), ',');            $updateSql = rtrim($updateSql, ", ") . " WHERE `" . $referenceColumn . "` IN (" . $whereIn . ")";            // 传入预处理sql语句和对应绑定数据            $return = DB::update($updateSql, $bindings);            if (!$return) {                throw new \Exception("数据更新失败");            }        } catch (\Exception $e) {            throw new \Exception($e->getMessage());        }    }}